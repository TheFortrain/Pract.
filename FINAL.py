import pandas as pd
from scipy.integrate import simps  # Правильний імпорт для функції simps

data = {
    'x1': [-5, -4.8, -4.6, -4.4, -4.2, -4, -3.8, -3.6, -3.4, -3.2, -3, -2.8, -2.6, -2.4, -2.2, -2, -1.8, -1.6, -1.4, -1.2, -1, -0.8, -0.6, -0.4, -0.2, 0, 0.2, 0.4, 0.6, 0.8, 1, 1.2, 1.4, 1.6, 1.8, 2, 2.2, 2.4, 2.6, 2.8, 3, 3.2, 3.4, 3.6, 3.8, 4, 4.2, 4.4, 4.6, 4.8, 5],
    'y1': [4.3, 4.4, 4.36, 4.9, 5.1, 5.12, 5.1, 5.14, 5.16, 5.18, 5.22, 5.26, 5.3, 5.37, 5.4, 5.3, 5.33, 5.37, 5.35, 5.25, 4.9, 4.9, 4.73, 4.56, 4.42, 4.3, 4.24, 4.145, 4.04, 3.93, 3.97, 3.94, 3.83, 3.97, 3.8, 3.5, 3.32, 3.24, 3.17, 3.2, 3.1, 2.85, 2.67, 2.5, 2.334, 2, 1.5, 1.13, 0.85, 0.5, 0]
}

df = pd.DataFrame(data)
def Dubno_simpson(df):
    h = df['x1'].iloc[1] - df['x1'].iloc[0]  # Крок між точками
    S = df['y1'].iloc[0] + df['y1'].iloc[len(df)-1]  # Перший і останній член
    for i in range(1, len(df)-1):
        if i % 2 == 0:
            S += 2 * df['y1'].iloc[i]
        else:
            S += 4 * df['y1'].iloc[i]
    return S * h / 3  # Формула Симпсона
result_custom = Dubno_simpson(df)

# Результат за допомогою функції simps з бібліотеки scipy
result_scipy = simps(df['y1'], df['x1'])  # Два аргументи: значення Y і X

# Виведення результатів
print(f"Результат власної реалізації: {result_custom}")
print(f"Результат за допомогою simps: {result_scipy}")
